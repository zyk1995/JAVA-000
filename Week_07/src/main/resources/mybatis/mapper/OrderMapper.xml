<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.week06.OrderMapper" >
        <resultMap id="BaseResultMap" type="com.example.demo.week06.OrderEntity" >
            <id column="id" property="id" jdbcType="BIGINT" />
            <result column="user_id" property="user_id" jdbcType="BIGINT" />
            <result column="commodities" property="commodities" jdbcType="VARCHAR" />
            <result column="status" property="status" jdbcType="BIGINT"/>
            <result column="deliver_status" property="deliver_status" jdbcType="VARCHAR" />
            <result column="total_price" property="total_price" jdbcType="BIGINT"/>
            <result column="create_time" property="create_time" jdbcType="BIGINT"/>
            <result column="update_time" property="update_time" jdbcType="BIGINT"/>
        </resultMap>

        <sql id="Base_Column_List" >
            id, user_id, commodities, status, deliver_status, total_price, create_time, update_time
        </sql>

    <insert id="insertOne" parameterType="com.example.demo.week06.OrderEntity" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO test.orders
            (user_id, commodities, status, deliver_status, total_price, create_time, update_time)
        VALUES
            (#{user_id}, #{commodities}, #{status}, #{deliver_status}, #{total_price}, #{create_time}, #{update_time})
    </insert>

    <insert id="insertMany" parameterType="list" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO test.orders
            (user_id, commodities, status, deliver_status, total_price, create_time, update_time)
        VALUES
        <foreach collection="list" item="item" separator="," >
            (#{item.user_id}, #{item.commodities}, #{item.status}, #{item.deliver_status}, #{item.total_price},
            #{item.create_time}, #{item.update_time})
        </foreach>
    </insert>

    <delete id="delete">
            delete from test.orders where id = #{id}
        </delete>

        <update id="update" parameterType="com.example.demo.week06.OrderEntity">
            UPDATE test.orders
            SET
            <trim suffixOverrides="," suffix="WHERE id = #{id}">
                <if test="user_id != null">user_id = #{user_id},</if>
                <if test="commodities != null">commodities = #{commodities},</if>
                <if test="status != null">status = #{status},</if>
                <if test="deliver_status != null">deliver_status = #{deliver_status},</if>
                <if test="total_price != null">total_price = #{total_price},</if>
                <if test="create_time != null">create_time = #{create_time},</if>
                <if test="update_time != null">update_time = #{update_time},</if>
            </trim>
        </update>

        <select id="query" resultType="HashMap" parameterType="HashMap">
            select <include refid="Base_Column_List" /> from test.orders
            <trim prefix="WHERE" prefixOverrides="AND |OR ">
                <if test="id != null">
                    id = #{id}
                </if>
                <if test="user_id != null">
                    and user_id = #{user_id}
                </if>
                <if test="commodities != null">
                    and commodities = #{commodities}
                </if>
                <if test="status != null">
                    and status = #{status}
                </if>
                <if test="deliver_status != null">
                    and deliver_status = #{deliver_status}
                </if>
                <if test="total_price != null">
                    and total_price = #{total_price}
                </if>
                <if test="create_time != null">
                    and create_time = #{create_time}
                </if>
                <if test="update_time != null">
                    and update_time = #{update_time}
                </if>
            </trim>
        </select>

</mapper>